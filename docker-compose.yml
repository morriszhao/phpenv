version: "3"
services:
  nginx:
    build:
      context: ./services/nginx
      args:
        NGINX_VERSION: nginx:${NGINX_VERSION}
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        NGINX_INSTALL_APPS: ${NGINX_INSTALL_APPS}
    container_name: nginx
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${NGINX_SSL_CERTIFICATE_DIR}:/ssl:rw
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_FASTCGI_PHP_CONF}:/etc/nginx/fastcgi-php.conf:ro
      - ${NGINX_FASTCGI_PARAMS}:/etc/nginx/fastcgi_params:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    environment:
      TZ: "$TZ"
    restart: always
    networks:
      - default

  php:
    build:
      context: ./services/php
      args:
        PHP_VERSION: php:${PHP_VERSION}-fpm-alpine
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS: ${PHP_EXTENSIONS}
        TZ: "$TZ"
    container_name: php
    expose:
      - 9501
      - 8081
    ports:
      - "8081:8081"
      - "8082:8082"
      - "8083:8083"
      - "8084:8084"
    extra_hosts:
      - "www.site1.com:172.17.0.1"
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP_LOG_DIR}:/var/log/php
      - ${DATA_DIR}/composer:/tmp/composer
      - ${DATA_DIR}/phpext:/root/phpext
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - default

  php56:
    build:
      context: ./services/php
      args:
        PHP_VERSION: php:${PHP56_VERSION}-fpm-alpine
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS: ${PHP56_EXTENSIONS}
        TZ: "$TZ"
    container_name: php56
    expose:
      - 9501
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP56_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP56_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP56_LOG_DIR}:/var/log/php
      - ${DATA_DIR}/composer:/tmp/composer
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - default

  php54:
    build:
      context: ./services/php54
      args:
        PHP_VERSION: php:${PHP54_VERSION}-fpm
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS: ${PHP54_EXTENSIONS}
        TZ: "$TZ"
    container_name: php54
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP54_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP54_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP54_LOG_DIR}:/var/log/php
      - ${DATA_DIR}/composer:/tmp/composer
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - default

  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    volumes:
      - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${DATA_DIR}/mysql:/var/lib/mysql/:rw
    restart: always
    networks:
      - default
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      TZ: "$TZ"

  mysql5:
    image: mysql:${MYSQL5_VERSION}
    container_name: mysql5
    ports:
      - "${MYSQL5_HOST_PORT}:3306"
    volumes:
      - ${MYSQL5_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${DATA_DIR}/mysql5:/var/lib/mysql/:rw
    restart: always
    networks:
      - default
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL5_ROOT_PASSWORD}"
      TZ: "$TZ"

  redis:
    image: redis:${REDIS_VERSION}
    container_name: redis
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
      - ${DATA_DIR}/redis:/data/:rw
    restart: always
    entrypoint: ["redis-server", "/etc/redis.conf"]
    environment:
      TZ: "$TZ"
    networks:
      - default

  memcached:
    image: memcached:${MEMCACHED_VERSION}
    container_name: memcached
    ports:
      - "${MEMCACHED_HOST_PORT}:11211"
    environment:
       MEMCACHED_CACHE_SIZE: "${MEMCACHED_CACHE_SIZE}"
    networks:
      - default

  rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION}
    container_name: rabbitmq
    restart: always
    ports:
      - "${RABBITMQ_HOST_PORT_C}:5672"
      - "${RABBITMQ_HOST_PORT_S}:15672"
    environment:
       TZ: "$TZ"
       RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
       RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
    networks:
          - default

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    ports:
      - "${PHPMYADMIN_HOST_PORT}:80"
    volumes:
      - ${PHPMYADMIN_USER_CONF_FILE}:/etc/phpmyadmin/config.user.inc.php:ro
      - ${PHPMYADMIN_PHP_CONF_FILE}:/usr/local/etc/php/conf.d/php-phpmyadmin.ini:ro
    networks:
      - default
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - TZ=$TZ

  phpredisadmin:
    image: erikdubbelboer/phpredisadmin:latest
    container_name: phpredisadmin
    ports:
      - "${REDISMYADMIN_HOST_PORT}:80"
    networks:
      - default
    environment:
      - REDIS_1_HOST=redis
      - REDIS_1_PORT=6379
      - TZ=$TZ

  mongodb:
    image: mongo:${MONGODB_VERSION}
    container_name: mongodb
    environment:
        MONGO_INITDB_ROOT_USERNAME: "${MONGODB_INITDB_ROOT_USERNAME}"
        MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_INITDB_ROOT_PASSWORD}"
        TZ: "$TZ"
    volumes:
      - ${DATA_DIR}/mongo:/data/db:rw
      - ${DATA_DIR}/mongo_key:/mongo:rw
    ports:
       - "${MONGODB_HOST_PORT}:27017"
    networks:
       - default
    command:
       --auth

  adminmongo:
    image: mrvautin/adminmongo
    container_name: adminmongo
    ports:
      - "${ADMINMONGO_HOST_PORT}:1234"
    environment:
      - HOST=0.0.0.0
      - DB_HOST=mongodb
      - DB_PORT=27017
    networks:
      - default

  elasticsearch:
    build:
      context: ./services/elasticsearch
      args:
        ELASTICSEARCH_VERSION: ${ELASTICSEARCH_VERSION}
        ELASTICSEARCH_PLUGINS: ${ELASTICSEARCH_PLUGINS}
    container_name: elasticsearch
    environment:
      - TZ=$TZ
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - ${DATA_DIR}/esdata:/usr/share/elasticsearch/data
      - ${ELASTICSEARCH_CONF_FILE}:/usr/share/elasticsearch/elasticsearch.yml
    hostname: elasticsearch
    restart: always
    ports:
      - "${ELASTICSEARCH_HOST_PORT_C}:9200"
      - "${ELASTICSEARCH_HOST_PORT_S}:9300"


  supervisor:
    build:
      context: ./services/supervisor
      args:
        ALPINE_VERSION: alpine:${ALPINE_VERSION}
        TZ: "$TZ"
    container_name: supervisor
    ports:
      - "${SUPERVISOR_HOST_PORT_C}:9001"
    volumes:
      - ${SUPERVISOR_LOG}:/var/log/supervisor/:rw
      - ${SUPERVISOR_CONFIG}:/etc/supervisor/conf.d/:rw
      - ${SUPERVISOR_CONF_FILE}:/etc/supervisor/supervisord.conf:ro
    command:
      - /bin/sh
      - -c
      - |
        supervisord -n -c /etc/supervisor/supervisord.conf
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - default
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    container_name: zookeeper

  kafka:
    image: wurstmeister/kafka
    depends_on: [zookeeper]
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${KAFKA_HOST_NAME}
      KAFKA_CREATE_TOPICS: 'desfault_topic'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${KAFKA_CONF_DIR}:/opt/kafka/config:rw
    container_name: kafka
  ck1:
    image: yandex/clickhouse-server
    ports:
      - "8133:8123"
    container_name: ck1
    volumes:
      - ${DATA_DIR}/ch1:/var/lib/clickhouse/data
      - ${CLICKHOUSE_CONF_FILE}:/etc/clickhouse-server/config.xml:rw
      - ${CLICKHOUSE_CLUSTERS_CONF_FILE}:/etc/clickhouse-server/ck_clusters_metrika.xml:rw
  ck2:
    image: yandex/clickhouse-server
    ports:
      - "8134:8123"
    container_name: ck2
    volumes:
      - ${DATA_DIR}/ch2:/var/lib/clickhouse/data
      - ${CLICKHOUSE_CONF_FILE}:/etc/clickhouse-server/config.xml:rw
      - ${CLICKHOUSE_CLUSTERS_CONF_FILE}:/etc/clickhouse-server/ck_clusters_metrika.xml:rw
  ck3:
    image: yandex/clickhouse-server
    ports:
      - "8135:8123"
    container_name: ck3
    volumes:
      - ${DATA_DIR}/ch3:/var/lib/clickhouse/data
      - ${CLICKHOUSE_CONF_FILE}:/etc/clickhouse-server/config.xml:rw
      - ${CLICKHOUSE_CLUSTERS_CONF_FILE}:/etc/clickhouse-server/ck_clusters_metrika.xml:rw
  clickhouse:
    image: yandex/clickhouse-server
    ports:
      - "8123:8123"
      - "9000:9000"
    container_name: clickhouse
    volumes:
      - ${DATA_DIR}/ch:/var/lib/clickhouse/data:rw
      - ${CLICKHOUSE_CONF_FILE}:/etc/clickhouse-server/config.xml:rw
    restart: always
  canal:
    image: canal/canal-server
    ports:
      - "11111:11111"
    container_name: canal-server
    # restart: always
    volumes:
      - ${CANAL_LOG_DIR}:/home/admin/canal-server/logs:rw
      - ${CANAL_CONF_DIR}:/home/admin/canal-server/conf:rw
    environment:
      canal.instance.master.address: ${CANAL_INSTANCE_MASTER_ADDRESS}
      canal.instance.dbUsername: ${CANAL_INSTANCE_MASTER_DBUSER}
      canal.instance.dbPassword: ${CANAL_INSTANCE_MASTER_DBPASS}
  grafana:
    image: mygrafana:v1
    ports:
      - "3000:3000"
    container_name: grafana
    volumes:
      - ${DATA_DIR}/grafana/plugins:/var/lib/grafana/plugins:rw
      - ${GRAFANA_CONF_FILE}:/usr/share/grafana/conf/defaults.ini:rw

networks:
  default:
